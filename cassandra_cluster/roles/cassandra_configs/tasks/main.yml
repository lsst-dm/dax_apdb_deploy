# SPDX-License-Identifier: MIT-0
---
# tasks file for roles/cassandra_configs

- name: "Generate config files for cassandra"
  delegate_to: localhost
  block:

    - name: "Create local cache folder"
      ansible.builtin.file:
        path: "{{ group_local_cache }}"
        state: "directory"
        mode: "755"

    - name: "Check cached copy of Cassandra config"
      ansible.builtin.stat:
        path: "{{ cassandra_configs_unpacked_conf }}/cassandra.yaml"
      register: cassandra_yaml_cache

    - name: "Get cassandra configs"
      when: not cassandra_yaml_cache.stat.exists
      block:

        - name: "Download cassandra tarball to local cache"
          ansible.builtin.get_url:
            url: "{{ cassandra_configs_download_url }}"
            dest: "{{ local_cache }}/{{ cassandra_configs_tar }}"
            mode: "644"

        - name: "Extract configs from cassandra tar"
          ansible.builtin.unarchive:
            src: "{{ local_cache }}/{{ cassandra_configs_tar }}"
            include:
              - "{{ cassandra_configs_conf_in_tar }}/cassandra.yaml"
              - "{{ cassandra_configs_conf_in_tar }}/jvm-server.options"
              - "{{ cassandra_configs_conf_in_tar }}/jvm11-server.options"
            dest: "{{ local_cache }}"

    - name: "Process cassandra.yaml overrides"
      ansible.builtin.template:
        src: "cassandra-local.yaml.j2"
        dest: "{{ group_local_cache }}/cassandra-local.yaml"
        mode: "644"

    - name: "Load cassandra.yaml files"
      ansible.builtin.set_fact:
        c8_yaml_orig: "{{ lookup('file', '{{ cassandra_configs_unpacked_conf }}/cassandra.yaml') }}"
        c8_yaml_local: "{{ lookup('file', '{{ group_local_cache }}/cassandra-local.yaml') }}"

    - name: "Merge cassandra.yaml files"
      ansible.builtin.set_fact:
        c8_yaml: "{{ c8_yaml_orig | merge_yaml_strings(c8_yaml_local) }}"

    - name: "Save cassandra.yaml to local cache"
      ansible.builtin.copy:
        content: "{{ c8_yaml }}"
        dest: "{{ group_local_cache }}/cassandra-{{ cassandra_version }}.yaml"
        mode: "644"

    - name: "Copy jvm-server.options files"
      ansible.builtin.copy:
        src: "{{ cassandra_configs_unpacked_conf }}/{{ item }}.options"
        dest: "{{ group_local_cache }}/{{ item }}-{{ cassandra_version }}.options"
        mode: "644"
      loop: ["jvm-server", "jvm11-server"]

    - name: "Patch jvm-server.options files"
      ansible.posix.patch:
        src: "{{ item }}.options.patch"
        dest: "{{ group_local_cache }}/{{ item }}-{{ cassandra_version }}.options"
      loop: ["jvm-server", "jvm11-server"]
